// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Chapter-1",
    columns: [
      { name: "Verse", type: "int" },
      { name: "Transliteration", type: "text" },
      { name: "Translation", type: "text" },
    ],
  },
  {
    name: "Chapter2",
    columns: [
      { name: "Verse", type: "float" },
      { name: "Transliteration", type: "text" },
      { name: "Translation", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Chapter1 = InferredTypes["Chapter-1"];
export type Chapter1Record = Chapter1 & XataRecord;

export type Chapter2 = InferredTypes["Chapter2"];
export type Chapter2Record = Chapter2 & XataRecord;

export type DatabaseSchema = {
  "Chapter-1": Chapter1Record;
  Chapter2: Chapter2Record;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://sanjeet-v-s-workspace-30uqe5.us-east-1.xata.sh/db/gita-app",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};

