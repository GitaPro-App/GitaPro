// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Users",
    columns: [
      { name: "name", type: "text" },
      { name: "email", type: "text", defaultValue: "" },
      { name: "sub", type: "text" },
      { name: "verse", type: "int", defaultValue: "0" },
      { name: "preferences", type: "text" },
      { name: "versesRead", type: "json" },
    ],
  },
  {
    name: "Classroom",
    columns: [
      { name: "code", type: "text" },
      { name: "student", type: "multiple" },
      { name: "owner", type: "multiple" },
      { name: "name", type: "text", notNull: true, defaultValue: "null" },
    ],
    revLinks: [{ column: "classroom_id", table: "ClassStream" }],
  },
  {
    name: "ClassStream",
    columns: [
      { name: "stream", type: "multiple" },
      {
        name: "classroom_id",
        type: "link",
        link: { table: "Classroom" },
        unique: true,
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["Users"];
export type UsersRecord = Users & XataRecord;

export type Classroom = InferredTypes["Classroom"];
export type ClassroomRecord = Classroom & XataRecord;

export type ClassStream = InferredTypes["ClassStream"];
export type ClassStreamRecord = ClassStream & XataRecord;

export type DatabaseSchema = {
  Users: UsersRecord;
  Classroom: ClassroomRecord;
  ClassStream: ClassStreamRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://sanjeet-v-s-workspace-30uqe5.us-east-1.xata.sh/db/gita-app",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
